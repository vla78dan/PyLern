"""
line = [1, 7, 6, 11, 3]
img = [[1, 7, 6, 11, 3], [1, 7, 6, 11, 3], [1, 7, 6, 11, 3], [1, 7, 6, 11, 3], [1, 7, 6, 11, 3]]
# [1, 7, 6, 11, 3] [1, 7, 6, 11, 3] [1, 7, 6, 11, 3] [1, 7, 6, 11, 3] [1, 7, 6, 11, 3]
img1 = [line[:], line[:], line[:], line[:], line[:]]
# [1, 7, 6, 11, 3] [1, 7, 6, 11, 3] [1, 7, 6, 11, 3] [1, 7, 6, 11, 3] [1, 7, 6, 11, 3]
img2 = img[0][1]  # 7

img[1] = [0, 0, 0, 0, 0]  # [1, 7, 6, 11, 3] [0, 0, 0, 0, 0] [1, 7, 6, 11, 3] [1, 7, 6, 11, 3] [1, 7, 6, 11, 3]
img[1][:] = [1] * 5  # [1, 7, 6, 11, 3] [1, 1, 1, 1, 1] [1, 7, 6, 11, 3] [1, 7, 6, 11, 3] [1, 7, 6, 11, 3]

t = [["Люблю", "тебя", "Петра", "творенье"],
     ["Люблю", "твой", "строгий", "стройный", "вид"],
     ["Невы", "державное", "теченье"],
     ["Береговой", "ее", "гранит"]
     ]
# [['Люблю', 'тебя', 'Петра', 'творенье'], ['Люблю', 'твой', 'строгий', 'стройный', 'вид'], ['Невы', 'державное', 'теченье'], ['Береговой', 'ее', 'гранит']]
t[0]  # ['Люблю', 'тебя', 'Петра', 'творенье']
t[0][2]  # Петра
t[0][2] = "Python"  # ['Люблю', 'тебя', 'Python', 'творенье']
t.append(["Твоих", "оград", "узор", "чугунный"])  # ДОБАВЛЯЕМ ЭЛЕМЕНТ В СПИСОК
# [['Люблю', 'тебя', 'Python', 'творенье'], ['Люблю', 'твой', 'строгий', 'стройный', 'вид'], ['Невы', 'державное', 'теченье'], ['Береговой', 'ее', 'гранит'], ['Твоих', 'оград', 'узор', 'чугунный']]
del t[1]  # удаляем второй элемент списка
# [['Люблю', 'тебя', 'Python', 'творенье'], ['Невы', 'державное', 'теченье'], ['Береговой', 'ее', 'гранит'], ['Твоих', 'оград', 'узор', 'чугунный']]

A = [[[True, False], [1, 2, 3]], ["matrix", "vector"]]  # [[[True, False], [1, 2, 3]], ['matrix', 'vector']]
A[0]# [[True, False], [1, 2, 3]]
print(A[1]) # ['matrix', 'vector']
print(A[0][0][1]) # False
print(A[1][0]) # matrix
print(t)

В программе объявлен следующий список:
lst = [5.4, 6.7, 10.4]
На вход программе подаются целые числа, записанные через пробел. Необходимо прочитать эти числа и сохранить в отдельном списке digs. Добавить в конец списка lst список digs отдельным элементом (как вложенный). Результирующий список lst вывести на экран командой:
print(lst)

Sample Input:
8 11
Sample Output:
[5.4, 6.7, 10.4, [8, 11]]

lst = [5.4, 6.7, 10.4]
digs = list(map(int, input().split()))
lst.append(digs)
print(lst)


На вход программе подаются три строки стихотворения (каждая с новой строки). Необходимо прочитать эти строки командами:
s1 = input() # чтение первой строки
s2 = input() # чтение второй строки
s3 = input() # чтение третьей строки
и каждую представить в виде отдельного списка слов (слова разделяются пробелом). Все полученные списки вложить в список lst (образуется двумерный, вложенный список) и вывести его командой:
print(lst)
Sample Input:
Мороз и солнце день чудесный
Еще ты дремлешь друг прелестный
Пора красавица проснись
Sample Output:
[['Мороз', 'и', 'солнце', 'день', 'чудесный'], ['Еще', 'ты', 'дремлешь', 'друг', 'прелестный'], ['Пора', 'красавица', 'проснись']]

s1 = input()
s2 = input()
s3 = input()
lst = [s1.split(), s2.split(), s3.split()]
print(lst)



На вход программе подается матрица чисел из трех строк. В каждой строке числа разделяются пробелом. Необходимо прочитать эти строки командами:
r1 = input() # чтение первой строки
r2 = input() # чтение второй строки
r3 = input() # чтение третьей строки
Затем преобразовать их в три списка из чисел и эти списки по порядку поместить в один двумерный (вложенный) список. Затем, вывести на экран последний столбец этой матрицы (двумерного списка) в виде строки из трех чисел, записанных через пробел.
Sample Input:
8 11 12 1
9 4 36 -4
1 12 49 5
Sample Output:
1 -4 5

r1 = list(input().split())
r2 = list(input().split())
r3 = list(input().split())
r = [r1[-1], r2[-1], r3[-1]]
print(*r)



В программе объявлен следующий вложенный список из трех строк:
t = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
    ["Я", "Python", "выучил", "с", "каналом"],
    ["Балакирев", "что", "раздавал?"]]
На вход программе подается строка, содержащее одно слово. Необходимо прочитать это слово и реализовать проверку на наличие его в списке t. Результат (булево True или False) вывести на экран. Решить задачу необходимо без применения условного оператора.

Sample Input:
дядя
Sample Output:
True

"""
t = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
    ["Я", "Python", "выучил", "с", "каналом"],
    ["Балакирев", "что", "раздавал?"]]
r = input()

print(r in t[0] or r in t[1] or r in t[2])




































