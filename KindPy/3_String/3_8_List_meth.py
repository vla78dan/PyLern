"""
a = [1, -54, 3, 23, 43, -45, 0]
print(a)
a.append(100)

a = [1, -54, 3, 23, 43, -45, 0]
a .append(100) # [1, -54, 3, 23, 43, -45, 0, 100] добавлояет элемент в конец списка
print(a)
a = [1, -54, 3, 23, 43, -45, 0]
a.insert(0, 100) #  [100, 1, -54, 3, 23, 43, -45, 0] - позволяет всавлять в список определенные значения
a.remove(1) # [100, -54, 3, 23, 43, -45, 0] - удаляет значение(1)

a = [1, -54, 3, 23, 43, -45, 0]
a.append(True) # [1, -54, 3, 23, 43, -45, 0, True]
a.append([1, 2, 3])  # [1, -54, 3, 23, 43, -45, 0, True, [1, 2, 3]]
a.pop() # - [1, -54, 3, 23, 43, -45, 0, True] удаляет последний элемент списка, при этом он возвращает удаляемый элемент
end  = a.pop() # True, сохраняем в переменной удаленный элемент
print(end) # True, сохраняем в переменной удаленный элемент

a = [1, -54, 3, 23, 43, -45, 0]
a.pop(1) # - удаляем элемент по индексу
# print(a) - [1, 3, 23, 43, -45, 0]
a.clear()  # - [] - очистка списка - удаляет все элементы
print(a)


a = [1, -54, 3, 23, 43, -45, 0]
q = a.copy() # - [1, -54, 3, 23, 43, -45, 0] - копирует список, но id у него другой
a.append(1)

w = a.count(1) # - находит число элементов с указанным значением - 2
e = a.index(-54) # - индекс 1- позволяет определять индекс определенног означения
a.reverse() # - [1, 0, -45, 43, 23, 3, -54, 1]- меняет порядок следования элементов на обратный
a.sort() # - [-54, -45, 0, 1, 1, 3, 23, 43]- позволяет выполнять сортировку значений по возрастанию текущего списка
a.sort(reverse=True) # [43, 23, 3, 1, 1, 0, -45, -54] - позволяет выполнять сортировку значений по убыванию текущего списка
print(a)



На вход программе подается строка, содержащая целые числа, записанные через пробел. Необходимо прочитать эти числа и сохранить в списке lst (как числа в порядке их следования в строке). Проверить, если первое число сформированного списка не равно последнему числу, то в список добавить значение True, а иначе - добавить значение False. Результирующий список lst вывести на экран командой:
print(*lst)
Реализовать задачу без использования условных операторов.
Sample Input:
8 12 2 -10 6
Sample Output:
8 12 2 -10 6 True
lst = list(map(int, input().split()))
lst.append(lst[0] != lst[-1])
print(*lst)


Объявите в программе следующий список городов:
cities = ["Москва", "Казань", "Ярославль"]
Необходимо вставить во вторую позицию (вторым элементом) этого списка строку "Ульяновск". Выведите полученный список на экран командой:
print(*cities)
cities = ["Москва", "Казань", "Ярославль"]
cities.insert(1, "Ульяновск")
print(*cities)



На вход программы подается строка с номером телефона в формате:
+7(xxx)xxx-xx-xx
Необходимо прочитать эту строку и преобразовать ее в список lst (посимвольно, то есть, элементами списка будут являться отдельные символы строки). Затем, удалить первый '+', число 7 заменить на 8 и убрать дефисы. Отобразить полученный список на экране командой:
print("".join(lst))
Sample Input:
+7(912)123-45-67
Sample Output:
8(912)1234567

lst = list(input())
lst.pop(0)
lst[0] = "8"
lst.remove("-")
lst.remove("-")
print("".join(lst))



На вход программы подается строка с именем, отчеством и фамилией, записанными через пробел. Необходимо прочитать эту строку и представить прочитанные данные в виде новой строки в формате:
Фамилия И.О.
Например, строка: "Сергей Михайлович Балакирев" преобразуется в строку: "Балакирев С.М."
i, o, f = input().split()
print(f"{f} {i[0]}.{o[0]}.")


На вход программы подаются целые числа, записанные в одну строку через пробел (не менее четырех). Необходимо прочитать эти числа и среди них найти три наименьших числа. Выведите на экран найденные три числа в порядке возрастания в одну строчку через пробел. Программу реализовать без использования условного оператора.
Sample Input:
8 11 -5 10 -1 0 7
Sample Output:
-5 -1 0
lst = list(map(int, input().split()))
lst.sort()
print(*lst[0:3])


"""































