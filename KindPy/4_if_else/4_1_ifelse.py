"""
q = 4
if q < 0:
    q = -q
    print(q)

a = float(input("a = "))
b = float(input("b = "))
if a < b:
    a, b = b, a
print(a,b)

x = int(input())
if -4 <= x <= 10:
    print("x is between -4 and 10")

x = int(input())
if x:
    print("x is True")

x = int(input())
if True:
    print("x is True")

marks = [3, 3, 4, 3, 4]
if 2 in marks:
    print("будет отчислен")
else:
    print("сдал сессию")

x = int(input())
if x < 0:
    print("отрицательное число")
else:
    print("положительное число")

x = int(input())
if x % 2 == 0:
    print("четное")
else:
    print("не четное")


На вход программе подаются два вещественных числа, записанных в одну строку через пробел. Необходимо их прочитать и вывести на экран наибольшее из этих чисел. Задачу решить с помощью условного оператора.
Sample Input:
8.7 11.0
Sample Output:
11.0
q,w = map(float, input().split())
if q < w:
    print(w)
else:
    print(q)



На вход программе подается строка со словом. Необходимо его прочитать и определить, является ли это слово палиндромом (одинаково читается вперед и назад, например, АННА). Регистр букв не учитывать, т.е. Анна, анна, аННА - это все должно определяться, как палиндромы. Если введенное слово палиндром, на экран вывести "ДА", иначе "НЕТ".

Sample Input:
Шалаш
Sample Output:
ДА

q = (input().strip()).upper()
if q == q[::-1]:
    print("ДА")
else:
    print("НЕТ")


На вход программе подаются два целых положительных числа, записанных в одну строку через пробел. Необходимо прочитать эти числа в переменные m и n (в порядке считывания). Определить, если число m делится нацело на число n, то вывести на экран частное от деления (результат деления) в виде целого числа. В противном случае вывести сообщение «m на n нацело не делится» (без кавычек) и вместо m и n подставить соответствующие числа, например: «13 на 2 нацело не делится».
Sample Input 1:
8 4
Sample Output 1:
2
Sample Input 2:
11 2
Sample Output 2:
11 на 2 нацело не делится

q, w = map(int, input().split())
e = q % w == 0
if e:
    print(int(q / w))
else:
    print(f"{q} на {w} нацело не делится")



 На вход программе подаются три целых положительных числа, записанных в одну строку через пробел. Необходимо прочитать эти числа и убедиться, что первые два числа - это катеты прямоугольного треугольника, а третье - его гипотенуза. (Подсказка: проверка делается по теореме Пифагора

 ). Если проверка проходит (истина), то вывести на экран "ДА", иначе "НЕТ".

# мое решение
# a, b, c = map(int, input().split())
# if a < c > b:
#     print("ДА")
# else:
#     print("НЕТ")
#
# a, b, c = map(int, input().split())
# if a < c and c > b:
#     print("ДА")
# else:
#     print("НЕТ")

a, b, c = map(int, input().split())

if c ** 2 == (a ** 2) + (b ** 2):
    print("ДА")
else:
    print("НЕТ")

На вход программе подается четырехзначное число, которое нужно прочитать из входного потока. Проверить, что это число оканчивается на цифру 7. Вывести на экран "ДА", если это так, и "НЕТ" в противном случае.

Sample Input:
8117
Sample Output:
ДА

На вход программе подается слово (строка). Необходимо прочитать это слово и проверить, что в нем присутствуют все три буквы: t, h и o (в произвольном порядке и хотя бы в одном экземпляре). Реализовать программу следует с помощью одного условного оператора. Если искомая проверка проходит, вывести "ДА", иначе "НЕТ".
s = input().strip()
if "t" in s and "h" in s and "o" in s:
    print("ДА")
else:
    print("НЕТ")



На вход программе подается строка из названий городов, записанных через пробел. Необходимо прочитать эту строку и сформировать на ее основе список cities из названий городов. Затем, проверить, если в списке cities присутствует город Москва, то удалить этот элемент из списка. Вывести на экран результирующий список cities командой:
print(*cities)
Sample Input:
Уфа Астрахань Москва Самара Казань
Sample Output:
Уфа Астрахань Самара Казань

cities = list(input().split())
if "Москва" in cities:
    cities.remove("Москва")
    print(*cities)
else:
    print(*cities)


На вход программе подаются четыре целых числа a, b, c, d, записанных в одну строку через пробел. Необходимо прочитать эти числа и определить, войдет ли в конверт с внутренними размерами a и b мм (первые два числа) прямоугольная открытка с размерами с и d мм (следующие два числа). Для размещения открытки в конверте необходим зазор в 1 мм с каждой стороны. Открытку можно поворачивать на 90 градусов. Вывести "ДА", если открытка входит, и "НЕТ" в противном случае.
Sample Input:
12 5 7 2
Sample Output:
ДА
a, b, c, d = map(int, input().split())
if ((c + 2 <= a and d + 2 <= b) or (d+ 2 <= a and c + 2 <= b)):
    print("ДА")
else:
    print("НЕТ")


На вход программе подается шестизначное число. Необходимо его прочитать и определить, является ли это число счастливым. (Счастливым называют такое шестизначное число, в котором сумма его первых трех цифр равна сумме последних трех его цифр.). Вывести "ДА", если число счастливое, и "НЕТ" в противном случае.
Sample Input:
811235
Sample Output:
ДА
q = input().strip()
f_sum = int(q[0]) + int(q[2]) + int(q[1])
s_sum = int(q[3]) + int(q[4]) + int(q[5])
if f_sum == s_sum:
    print("ДА")
else:
    print("НЕТ")


Работа светофора для пешеходов запрограммирована следующим образом: в начале каждого часа в течение трех минут горит зеленый сигнал, затем в течение двух минут – красный, в течение трех минут – опять зеленый и т. д., процесс повторяется.
На вход программе подается вещественное число t, означающее время в минутах, прошедшее с начала очередного часа. Необходимо прочитать это число и определить, сигнал какого цвета горит для пешеходов в момент времени t (прочитанного из входного потока). На экран вывести сообщение (без кавычек):
"green" - для зеленого;
"red" - для красного.
Sample Input:
12.5
Sample Output:
green


"""
t = float(input().strip())
if t % 5 < 3:
    print("green")
else:
    print("red")































