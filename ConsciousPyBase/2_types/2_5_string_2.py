"""
От пользователя поступает три сообщения, нужно объединить эти сообщения в одно и вывести на экран.
В конце, выведите на экран получившуюся строку. Примеры результата смотрите в Sample Output.
Чтобы принять одну строку от пользователя, понадобится один input(), а чтобы принять три понадобится три input().
И помните о пробелах между строками. Для просмотра вашего кода, можете нажать на кнопку "запустить код".
Sample Input 1:
Тот
кто не сдаётся,
тот всего добьётся!
Sample Output 1:
Тот кто не сдаётся, тот всего добьётся!
Sample Input 2:
Развиваться - это словно идти в гору
по скользкой дороге!
Как только остановишься, скатываешься вниз!
Sample Output 2:
Развиваться - это словно идти в гору по скользкой дороге! Как только остановишься, скатываешься вниз!

q,w,e = input(),input(),input()
print(q, w, e)


Уже созданы три переменные: a, b, c. Например:
a = "Люблю "
b = "тебя, "
c = "Эйлинсбург!"
Используйте эти три переменные (a, b, c), и с помощью конкатенации и обращения по индексу (или срезу), создайте следующий текст:  Люблю тебя, Эйли!
Например, если сложить b + a + b[-3] получится текст тебя, Люблю я. Вот подобным образом из переменных нужно получить текст: Люблю тебя, Эйли!
Sample Input:
Sample Output:
Люблю тебя, Эйли!

print(a,b,c[0:4],c[-1], sep="")

Перед вами три переменных a, b, c, вам нужно использовать только символы из этих переменных.
Используйте конкатенацию, срезы и обращение к символу, чтобы получить текст:
Люблю тебя, Эйли! Ты прекрасна!
Сохраните полученный результат в переменную message и выведите на экран.
Sample Input:
Sample Output:
Люблю тебя, Эйли! Ты прекрасна!

a = "Люблю тебя, Петра творенье, "
b = "Эйли Биллиш"
c = " Ты удивительно прекрасна, как изумруд среди песка!"

message = a[:11] + " " + b[:4] + c[-1] +  " " + c[1:3] + c[15:25] + c[-1]
print(message)

Уже создана переменная code, в которую присвоен зашифрованный текст.
Ваша задача расшифровать текст и вывести его на экран.
Вам нужно вывести на экран последовательно все чётные символы переменной code, начиная со второго символа.
Обратите внимание что именно со второго символа, а не индекса. И брать нужно каждый второй, начиная со второго.
Sample Input:
Sample Output:
Друг, я сделал это, я написал ей!

code = "HДBрEуYг ,b dяh yсsдbе3л2а9л* #э9т3оb,f bяY Eнbаmпnиxс;аeлw nеeйu!"
print(code[1::2])

Создайте переменную word, которая будет принимать слово от пользователя. Напомню, чтобы принять сообщение от пользователя, нужно использовать input().
Создайте две переменные little и big. Переменная little – это слово из переменной word, только все буквы маленькие. Переменная big – это слово из переменной word, только все буквы большие.
Выведите на экран переменную little и big на разных строках (абзацах). Варианты результатов можете посмотреть в Sample Output.
Задание изменено 04.03.2025 некоторые имена переменных у участников могут отличаться.
Sample Input 1:
Алон Миск
Sample Output 1:
алон миск
АЛОН МИСК

text = "12Пример231 строк2и123"
stripped_text = text.strip("231")
print(stripped_text)   # Пример231 строк2и




Создайте переменную text которая будет принимать зашифрованное сообщение от пользователя, для этого используйте input().
Создайте переменную text_copy и скопируйте информацию из переменной text, чтобы работать с копией сообщения, а не с оригиналом, так будет безопасней. Чтобы сделать копию строки можно сделать вот так: text_copy = text[:]
Используйте text_copy и замените в строке следующие цифры:
- Цифру "1" на букву "П"
- Цифру "2" на букву "и"
- Цифру "3" на букву "е"
Выведите на экран расшифрованное сообщение.

Команду text_copy = text можно рассматривать как процесс копирования. Такой способ копирования можно использовать для неизменяемых объектов, таких как строки и числа. Другой вариант копирования строк, это присвоить полный срез объекта, например: text_copy = text[:], в этом случае срез возвращает идентичную оригиналу новую строку, а значит text_copy будет является копией объекта text.

text = input().strip()
text_copy = text[:]
print(text_copy.replace("1", "П").replace("2", "и").replace("3", "е"))

Пользователь вводит пароль, примите и присвойте его в переменную password.
Сделайте две проверки:
- Начинается ли password с большой буквы. Если начинается, проверка возвращает True, иначе False. Результат проверки присвойте в переменную test1.
- Строка password может состоять из одних букв, либо букв и цифр, но должна начинаться с буквы, может содержать символ нижнего подчёркивания "_", не должна быть пустой и содержать пробелы. Другими словами, требование к паролю такое же как к созданию переменной в Python. Подумайте как будет выглядеть вторая проверка и присвойте результат этой проверки в переменную test2.
Значения переменных test1 и test2 могут быть либо True, либо False.
Создайте переменную check_password, и присвойте в неё сумму всех тестов, то есть test1 + test2
Помните я говорил, что True равен числу 1, а False равен числу 0? А значит, True и False можно складывать. Когда вы создаёте check_password равную сумме test1 + test2, в этой операции вы складываете True и False. Чтобы пароль был подходящим по условиям, переменная check_password должна быть равна 2, то есть True + True.


Последним шагом сравните, равен ли check_password числу 2 и выведите результат этого сравнения на экран. Тем самым, мы узнаем, проходит ли пароль проверку или нет.


"""

password = input()
test1 = password[0].isupper()
test2 = password.isidentifier()

print(test1,  test2)

check_password = int(test1 + test2)
print(check_password == 2)



















































